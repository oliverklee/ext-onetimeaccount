---
name: CI
on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '15 3 * * 1'
jobs:
  php-lint:
    name: "PHP linter"
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: none
          tools: composer:v2.4
      - name: "Show Composer version"
        run: composer --version
      - name: "Show the Composer configuration"
        run: composer config --global --list
      - name: "Run PHP lint"
        run: "composer ci:php:lint"
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
  code-quality:
    name: "Code quality checks"
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: none
          tools: composer:v2.4, phive
      - name: "Show Composer version"
        run: composer --version
      - name: "Show the Composer configuration"
        run: composer config --global --list
      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v3
        with:
          key: "php${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          path: ~/.cache/composer
          restore-keys: "php${{ matrix.php-version }}-composer-\n"
      - name: "Install Composer dependencies"
        run: "composer install --no-progress"
      - name: "Install development tools"
        run: phive --no-progress install --trust-gpg-keys D8406D0D82947747293778314AA394086372C20A
      - name: "Run command"
        run: "composer ci:${{ matrix.command }}"
    strategy:
      fail-fast: false
      matrix:
        command:
          - "composer:normalize"
          - "json:lint"
          - "php:copypaste"
          - "php:cs-fixer"
          - "php:sniff"
          - "php:stan"
          - "ts:lint"
          - "yaml:lint"
        php-version:
          - "8.1"
  xliff-lint:
    name: "Xliff linter"
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Run the xliff lint"
        uses: TYPO3-Continuous-Integration/TYPO3-CI-Xliff-Lint@v1
  unit-tests:
    name: "Unit tests"
    runs-on: ubuntu-22.04
    needs: php-lint
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: none
          tools: composer:v2.4
          ini-values: error_reporting=E_ALL
      - name: "Show Composer version"
        run: composer --version
      - name: "Show the Composer configuration"
        run: composer config --global --list
      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v3
        with:
          key: "php${{ matrix.php-version }}-typo3${{ matrix.typo3-version }}-${{ matrix.composer-dependencies }}-composer-${{ hashFiles('**/composer.json') }}"
          path: ~/.cache/composer
          restore-keys: "php${{ matrix.php-version }}-typo3${{ matrix.typo3-version }}-${{ matrix.composer-dependencies }}-composer-\n"
      - name: "Install TYPO3 Core"
        env:
          TYPO3: "${{ matrix.typo3-version }}"
        run: |
          composer require --no-ansi --no-interaction --no-progress --no-install typo3/cms-core:"$TYPO3"
          composer show
      - name: "Install lowest dependencies with composer"
        if: "matrix.composer-dependencies == 'lowest'"
        run: |
          composer update --no-ansi --no-interaction --no-progress --with-dependencies --prefer-lowest
          composer show
      - name: "Install highest dependencies with composer"
        if: "matrix.composer-dependencies == 'highest'"
        run: |
          composer update --no-ansi --no-interaction --no-progress --with-dependencies
          composer show
      - name: "Run unit tests"
        run: "composer ci:tests:unit"
    strategy:
      fail-fast: false
      matrix:
        include:
          - typo3-version: "^10.4"
            php-version: "7.2"
            composer-dependencies: lowest
          - typo3-version: "^10.4"
            php-version: "7.2"
            composer-dependencies: highest
          - typo3-version: "^10.4"
            php-version: "7.3"
            composer-dependencies: lowest
          - typo3-version: "^10.4"
            php-version: "7.3"
            composer-dependencies: highest
          - typo3-version: "^10.4"
            php-version: "7.4"
            composer-dependencies: lowest
          - typo3-version: "^10.4"
            php-version: "7.4"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "7.4"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "7.4"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.0"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.0"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.1"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.1"
            composer-dependencies: highest
  functional-tests:
    name: "Functional tests"
    runs-on: ubuntu-22.04
    needs: php-lint
    env:
      DB_DATABASE: typo3
      DB_USER: root
      DB_PASSWORD: root
      DB_HOST: localhost
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"
          tools: composer:v2.4
          extensions: mysqli
          coverage: none
          ini-values: error_reporting=E_ALL
      - name: "Show Composer version"
        run: composer --version
      - name: "Show the Composer configuration"
        run: composer config --global --list
      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v3
        with:
          key: "php${{ matrix.php-version }}-typo3${{ matrix.typo3-version }}-${{ matrix.composer-dependencies }}-composer-${{ hashFiles('**/composer.json') }}"
          path: ~/.cache/composer
          restore-keys: "php${{ matrix.php-version }}-typo3${{ matrix.typo3-version }}-${{ matrix.composer-dependencies }}-composer-\n"
      - name: "Install TYPO3 Core"
        env:
          TYPO3: "${{ matrix.typo3-version }}"
        run: |
          composer require --no-ansi --no-interaction --no-progress --no-install typo3/cms-core:"$TYPO3"
          composer show
      - name: "Install lowest dependencies with composer"
        if: "matrix.composer-dependencies == 'lowest'"
        run: |
          composer update --no-ansi --no-interaction --no-progress --with-dependencies --prefer-lowest
          composer show
      - name: "Install highest dependencies with composer"
        if: "matrix.composer-dependencies == 'highest'"
        run: |
          composer update --no-ansi --no-interaction --no-progress --with-dependencies
          composer show
      - name: "Start MySQL"
        run: "sudo /etc/init.d/mysql start"
      # This workaround for MySQL 8 can be removed once we drop support for PHP 7.2/7.3.
      - name: "Configure the MySQL user to work with PHP 7.2/7.3"
        run: mysql -u root --password=root -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root'"
      - name: "Run functional tests"
        run: |
          export typo3DatabaseName="$DB_DATABASE";
          export typo3DatabaseHost="$DB_HOST";
          export typo3DatabaseUsername="$DB_USER";
          export typo3DatabasePassword="$DB_PASSWORD";
          composer ci:tests:functional
    strategy:
      fail-fast: false
      matrix:
        include:
          - typo3-version: "^10.4"
            php-version: "7.2"
            composer-dependencies: lowest
          - typo3-version: "^10.4"
            php-version: "7.2"
            composer-dependencies: highest
          - typo3-version: "^10.4"
            php-version: "7.3"
            composer-dependencies: lowest
          - typo3-version: "^10.4"
            php-version: "7.3"
            composer-dependencies: highest
          - typo3-version: "^10.4"
            php-version: "7.4"
            composer-dependencies: lowest
          - typo3-version: "^10.4"
            php-version: "7.4"
            composer-dependencies: highest
